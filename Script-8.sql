SELECT studno, TO_CHAR(BIRTHDATE, 'YY-MM')BIRTHDATE
FROM STUDENT
WHERE NAME ='전인하';


-- 보직수당을 받는 교수들을 대상으로 수당과 급여를 더한 값에 12를 곱하여 ANUAL 이라는 이름으로
-- 연봉 계산을 하고 세 자리마다 쉼표로 표시하여라.

SELECT NAME, SAL, COMM,TO_CHAR((SAL+COMM)*12,'9,999')ANUAL
FROM  PROFESSOR p 
WHERE COMM IS NOT NULL;

SELECT 
	TO_NUMBER('1234'),
--	TO_NUMBER('ABCD'),
	TO_NUMBER('1,234','9,999')
FROM DUAL;

-- 학과 번호가 
--101 컴퓨터 공학과
--102 멀티미디어학과
--201 전자공학과
-- 나머지는 기계공학과.

SELECT 
	STUDNO,
	NAME,
	DEPTNO,
	DECODE(DEPTNO, 
	101,'컴퓨터공학과',
	102,'멀티미디어학과',
	201,'전자공학과',
	'기계공학과') DNAME 
FROM STUDENT s ;

-- 교수의 소속학과에 따라 보너스 지급, 101학과일경우 급여의 10%, 102 학과는 20% 201학과는 30% 나머지는
-- THEN 에서 오는 타입을 ELSE 에서 입력해야됨. 
SELECT 
	PROFNO, 
	NAME, 
	SAL,
	DEPTNO,
	CASE  -- IF문 사용처럼 사용.
		WHEN DEPTNO = 101 THEN SAL * 0.1
		WHEN DEPTNO = 101 THEN SAL * 0.2
		WHEN DEPTNO = 101 THEN SAL * 0.3
		ELSE 0
	END BONUS,
	CASE DEPTNO -- SWICH처럼 사용.
		WHEN 101 THEN SAL * 0.1
		WHEN 101 THEN SAL * 0.2
		WHEN 101 THEN SAL * 0.3
		ELSE 0
	END BONUS2
FROM PROFESSOR p ;


SELECT COUNT(*) -- 학생의 학과숫자.
FROM STUDENT s ;

-- 그룹
-- 교수의 인원수를 조회.

SELECT COUNT(*),COUNT(COMM), MAX(SAL), MIN(SAL)
FROM PROFESSOR p ;

SELECT COUNT(*)
FROM PROFESSOR p 
WHERE COMM IS NOT NULL;

-- 101번 학과 학생들의 몸무게 평균과 합계를 구하여라, 또한 최대키 최소키를 구하여라.

SELECT COUNT(*), AVG(WEIGHT), SUM(WEIGHT),MAX(HEIGHT),MIN(HEIGHT)
FROM STUDENT s 
WHERE DEPTNO = 101;


SELECT GRADE,DEPTNO, COUNT(*)
FROM STUDENT s 
GROUP BY GRADE, DEPTNO
ORDER BY 1, 2;

-- 학과 번호별 교수의 인원수를 조회.
SELECT DEPTNO ,COUNT(*), COUNT(COMM)
FROM PROFESSOR p
GROUP BY DEPTNO;

-- 학과 번호별 교수의 최대급여, 최소급여 조회
SELECT DEPTNO , MAX(SAL),MIN(SAL)
FROM PROFESSOR p 
GROUP BY DEPTNO;

-- 학생의 학과와 학년을 기준으로 그룹하여 학과와 학년별 인원수와 평균체중을 구하고 반올림처리하여라.
SELECT DEPTNO, GRADE , COUNT(*),AVG(WEIGHT)
FROM STUDENT s 
GROUP BY DEPTNO, GRADE;

--학생의 생년월일(BIRTHDATE)를 기준으로 탄생 계절별 인원수 구하기

SELECT 
--	STUDNO, 
--	BIRTHDATE, 
--	TO_CHAR(BIRTHDATE,'MM'),
--	TO_CHAR(BIRTHDATE,'Q'),
	TO_CHAR(ADD_MONTHS(BIRTHDATE,-2),'Q')A,
	CASE TO_CHAR(ADD_MONTHS(BIRTHDATE,-2),'Q')
		WHEN '1' THEN '봄'
		WHEN '2' THEN '여름'
		WHEN '3' THEN '가을'
		WHEN '4' THEN '겨울'
	END SEASON
	,COUNT(*)
FROM STUDENT s
GROUP BY TO_CHAR(ADD_MONTHS(BIRTHDATE,-2),'Q') 
ORDER BY TO_CHAR(ADD_MONTHS(BIRTHDATE,-2),'Q');



SELECT A, COUNT(*) FROM (
	SELECT TO_CHAR(ADD_MONTHS(BIRTHDATE,-2),'Q') A
	FROM STUDENT s
)
GROUP BY A;

-- ROLLUP : 부분합, 축 한방향.
-- CUBE : 부분합, 양축.

SELECT DEPTNO , POSITION ,COUNT(*)
FROM PROFESSOR p 
GROUP BY DEPTNO , POSITION
UNION
SELECT DEPTNO, NULL, COUNT(*)
FROM PROFESSOR p 
GROUP BY DEPTNO
UNION 
SELECT NULL, NULL, COUNT(*)
FROM PROFESSOR p2 
ORDER BY 2;



SELECT DEPTNO ,POSITION ,COUNT(*)
FROM PROFESSOR p
GROUP BY CUBE (DEPTNO , POSITION)
ORDER BY 1, 2;

SELECT DEPTNO , GRADE , COUNT(*),GROUPING (DEPTNO),GROUPING (GRADE)
FROM STUDENT s 
GROUP BY CUBE (DEPTNO,GRADE)
ORDER BY 1, 2;

--학생수가 4명 이상인 학년에 대해 학생 평균 신장과 체중을 조회

SELECT GRADE,COUNT(*)
FROM STUDENT s
WHERE  DEPTNO = 101
GROUP BY GRADE
HAVING COUNT(*) >= 2
ORDER BY GRADE;

-- FROM > WHERE > GROUP > HAVING > SESLECT > ORDER

-- 101학과가 아닌 학생들의 인원수 조회.
SELECT DEPTNO, COUNT(*)
FROM STUDENT s 
WHERE DEPTNO != 101
GROUP BY DEPTNO
HAVING DEPTNO != 101;


--학과별 학생의 평균 몸무게 중 최대값을 구하여라.
SELECT MAX(DEPTNO), MAX(AVG(WEIGHT))
FROM STUDENT s 
GROUP BY DEPTNO;


























